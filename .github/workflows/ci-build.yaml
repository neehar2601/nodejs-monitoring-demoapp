name: CI Build App

on:
  push:
    branches: [master]
    paths:
      - 'src/**'
      - '.github/workflows/**'
  pull_request:

env:
  IMAGE_REG: ghcr.io
  IMAGE_REPO: benc-uk/nodejs-demoapp

permissions:
  packages: write

jobs:
  test:
    name: 'Tests & Linting'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Run linting'
        run: make lint

      - name: 'Run tests'
        run: make test-report

      - name: 'Upload test results'
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./src/mochawesome-report

  build:
    name: 'Build & Push Image'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Log in to Docker Hub'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 'Build and push Docker image'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nodejsmonitoring:v${{ github.run_number }}
#      - name: 'Trigger Release Pipeline'
#        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#        uses: benc-uk/workflow-dispatch@v1
#        with:
#          workflow: 'CD Release - AKS'
#          token: ${{ secrets.GH_PAT }}
#          inputs: '{ "IMAGE_TAG": "v${{ github.run_number }}" }'

  deploy:
    name: 'deploy to docker'
    needs: build
    runs-on: ubuntu-latest
    steps:
      #- uses: docker/build-push-action@v2
      #  with:
      #    tags: ${{ secrets.DOCKER_USERNAME }}/nodejsmonitoring:v${{ github.run_number }}
      #    push: false
      - uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/nodejsmonitoring:v${{ github.run_number }}
          run: |
              echo "hello world"
              docker ps -a
          


